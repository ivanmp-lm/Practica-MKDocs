{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido a la p\u00e1gina web realizada para la pr\u00e1ctica de MKDocs de IAW. Si desea ver el proceso de instalaci\u00f3n de la misma, pulse en \"Instalaci\u00f3n de MKDocs\" en la barra lateral.","title":"Home"},{"location":"about/","text":"Esta p\u00e1gina ha sido realizada con MKDocs y Docker por Iv\u00e1n Mart\u00ednez Palacios.","title":"Acerca de"},{"location":"home/","text":"Pr\u00e1ctica MKDocs Se crear\u00e1 una m\u00e1quina virtual de forma local en VirtualBox para esta pr\u00e1ctica. Lo primero que se har\u00e1 en la misma ser\u00e1 crear una estructura de carpetas espec\u00edfica para el uso de MKDocs, el resultado ser\u00eda algo as\u00ed: El archivo \"mkdocs.yml\" es similar al archivo de configuraci\u00f3n de Jekyll, en su interior tambi\u00e9n escribiremos los par\u00e1metros necesarios para el funcionamiento y orden de la p\u00e1gina: site_name: Iv\u00e1n MKDocs nav: - Principal: home.md - Acerca de: about.md theme: material Como se indica en el archivo, el tema a utilizar tiene el nombre \"material\" y las p\u00e1ginas creadas anteriormente llamadas \"index.md\" y \"about.md\" est\u00e1n listadas en la p\u00e1gina. No obstante, el archivo completo puede ser mucho m\u00e1s elaborado y complejo ya que pueden editarse multitud de opciones para el tema. Para comenzar a probar la p\u00e1gina, se ejecutar\u00e1 el siguiente comando partiendo desde la carpeta \"proyecto\": $ sudo docker run --rm -it -p 8000:8000 -v \"$PWD\":/docs squidfunk/mkdocs-material La carpeta \"docs\" ser\u00e1 enlazada como un volumen en la carpeta del contenedor relativa al tema de MKDocs. S\u00f3lo se podr\u00e1 acceder de forma local a la p\u00e1gina web: Tras configurar los archivos Markdown para incluir la informaci\u00f3n que se desee se lanzar\u00e1n los siguientes comandos: $ git init $ git remote add origin \"URL_REPOSITORIO\" $ sudo docker run --rm -it -v ~/.ssh:/root/.ssh -v \"$PWD\":/docs squidfunk/mkdocs-material gh-deploy Tras inicializar el repositorio de GitHub en la carpeta proyecto y referenciar el repositorio objetivo, se lanzar\u00e1 ese \u00faltimo comando con docker para ejecutar el comando \"gh-deploy\". Se nos pedir\u00e1 usuario y contrase\u00f1a de GitHub y tras logearse exitosamente, todo el contenido ser\u00e1 enviado al repositorio en cuesti\u00f3n y la p\u00e1gina quedar\u00e1 publicada autom\u00e1ticamente.","title":"Instalaci\u00f3n de MKDocs"},{"location":"home/#practica-mkdocs","text":"Se crear\u00e1 una m\u00e1quina virtual de forma local en VirtualBox para esta pr\u00e1ctica. Lo primero que se har\u00e1 en la misma ser\u00e1 crear una estructura de carpetas espec\u00edfica para el uso de MKDocs, el resultado ser\u00eda algo as\u00ed: El archivo \"mkdocs.yml\" es similar al archivo de configuraci\u00f3n de Jekyll, en su interior tambi\u00e9n escribiremos los par\u00e1metros necesarios para el funcionamiento y orden de la p\u00e1gina: site_name: Iv\u00e1n MKDocs nav: - Principal: home.md - Acerca de: about.md theme: material Como se indica en el archivo, el tema a utilizar tiene el nombre \"material\" y las p\u00e1ginas creadas anteriormente llamadas \"index.md\" y \"about.md\" est\u00e1n listadas en la p\u00e1gina. No obstante, el archivo completo puede ser mucho m\u00e1s elaborado y complejo ya que pueden editarse multitud de opciones para el tema. Para comenzar a probar la p\u00e1gina, se ejecutar\u00e1 el siguiente comando partiendo desde la carpeta \"proyecto\": $ sudo docker run --rm -it -p 8000:8000 -v \"$PWD\":/docs squidfunk/mkdocs-material La carpeta \"docs\" ser\u00e1 enlazada como un volumen en la carpeta del contenedor relativa al tema de MKDocs. S\u00f3lo se podr\u00e1 acceder de forma local a la p\u00e1gina web: Tras configurar los archivos Markdown para incluir la informaci\u00f3n que se desee se lanzar\u00e1n los siguientes comandos: $ git init $ git remote add origin \"URL_REPOSITORIO\" $ sudo docker run --rm -it -v ~/.ssh:/root/.ssh -v \"$PWD\":/docs squidfunk/mkdocs-material gh-deploy Tras inicializar el repositorio de GitHub en la carpeta proyecto y referenciar el repositorio objetivo, se lanzar\u00e1 ese \u00faltimo comando con docker para ejecutar el comando \"gh-deploy\". Se nos pedir\u00e1 usuario y contrase\u00f1a de GitHub y tras logearse exitosamente, todo el contenido ser\u00e1 enviado al repositorio en cuesti\u00f3n y la p\u00e1gina quedar\u00e1 publicada autom\u00e1ticamente.","title":"Pr\u00e1ctica MKDocs"}]}